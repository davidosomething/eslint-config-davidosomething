module.exports = {
  extends: 'eslint:recommended',
  rules: {
    'array-bracket-newline': [ 'error', 'consistent' ],
    'array-callback-return': [
      'error',
      {
        allowImplicit: false,
        checkForEach: true
      }
    ],
    'array-element-newline': [ 'error', 'consistent' ],
    'arrow-body-style': ['error', 'as-needed'],
    'arrow-parens': ['error', 'always'],
    'arrow-spacing': [
      'error',
      {
        before: true,
        after: true,
      },
    ],
    'block-scoped-var': ['error'],
    'block-spacing': ['error'],
    'brace-style': ['warn', 'stroustrup'],
    'camelcase': ['warn'],
    'comma-spacing': [
      'error',
      {
        before: false,
        after: true,
      },
    ],
    'comma-style': ['error', 'last'],
    'computed-property-spacing': ['error', 'never'],
    'complexity': ['error', 20],
    'consistent-return': 'off',
    'dot-location': ['warn', 'property'],
    'eol-last': 'off',
    'indent': [
      'error',
      2,
      {
        SwitchCase: 1,
      },
    ],
    'keyword-spacing': 'error',
    'max-depth': ['error', 3],
    'max-nested-callbacks': ['warn', 3],
    'max-params': ['error', 3],
    'new-cap': [
      'error',
      {
        properties: false, // E.g. $.Deferred()
      },
    ],
    'new-parens': 'error',
    'no-alert': 'error',
    'no-caller': 'error',
    'no-cond-assign': 'error',
    'no-console': 'warn',
    'no-constant-condition': 'error',
    'no-control-regex': 'error',
    'no-debugger': 'warn',
    'no-dupe-args': 'error',
    'no-dupe-keys': 'error',
    'no-duplicate-case': 'error',
    'no-empty-character-class': 'error',
    'no-empty': 'error',
    'no-ex-assign': 'error',
    'no-extend-native': 'error',
    'no-extra-boolean-cast': 'error',
    'no-extra-label': 'error',
    'no-extra-parens': 'off',
    'no-extra-semi': 'error',
    'no-floating-decimal': 'error',
    'no-func-assign': 'error',
    'no-implied-eval': 'error',
    'no-inner-declarations': 'error',
    'no-invalid-regexp': 'error',
    'no-irregular-whitespace': 'error',
    'no-iterator': 'error',
    'no-labels': 'error',
    'no-lone-blocks': 'error',
    'no-loop-func': 'error',
    'no-magic-numbers': [
      'warn',
      {
        ignore: [-1, 0, 1, 2],
      },
    ],
    'no-mixed-spaces-and-tabs': ['error', 'smart-tabs'],
    'no-nested-ternary': 'error',
    'no-obj-calls': 'error',
    'no-plusplus': 'warn',
    'no-regex-spaces': 'error',
    'no-return-assign': 'error',
    'no-self-compare': 'error',
    'no-sparse-arrays': 'error',
    'no-throw-literal': 'error',
    'no-trailing-spaces': 'error',
    'no-underscore-dangle': 'off',
    'no-unexpected-multiline': 'error',
    'no-unreachable': 'error',
    'no-use-before-define': 'warn',
    'no-unused-vars': [
      'error',
      {
        args: 'none',
      },
    ],
    'no-with': 'error',
    'object-curly-spacing': ['error', 'always'],
    'object-shorthand': ['error', 'never'],
    'one-var': ['error', 'never'],
    'quote-props': [
      'error',
      'consistent',
      {
        keywords: true,
      },
    ],
    'quotes': ['warn', 'single'],
    'radix': 'error',
    'semi': ['error', 'always'],
    'semi-spacing': [
      'error',
      {
        before: false,
        after: true,
      },
    ],
    'space-before-blocks': 'error',
    'space-before-function-paren': [
      'warn',
      {
        anonymous: 'always',
        named: 'never',
      },
    ],
    'space-infix-ops': [
      'error',
      {
        int32Hint: false,
      },
    ],
    'space-unary-ops': 'error',
    'use-isnan': 'error',
    'valid-typeof': 'error',
    'wrap-iife': ['error', 'any'],
    'yoda': ['error', 'never'],
  },
};
